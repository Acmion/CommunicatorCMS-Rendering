@page

@using Microsoft.AspNetCore.Html;
@using System.Diagnostics;
@using CommunicatorCms;
@using CommunicatorCms.Core;
@using CommunicatorCms.Core.AppExtensions;
@using CommunicatorCms.Core.Settings;
@using CommunicatorCms.Core.AppFileSystem;
@using System.IO;

@inject RequestState RequestState;

@{
    if (Request.Query[QuerySettings.ResourceParameter].ToString().Contains("favicon"))
    {
        return;
    }

    /*
    var fs = System.IO.File.OpenRead(@"D:\My files\Downloads\mono-master.zip");

    Response.ContentType = "application/zip";
    Response.Headers.Add("Content-Description", "File Transfer");
    Response.Headers.Add("Content-Disposition", "attachment; filename=" + "hello.zip");
    Response.Headers.Add("Content-Length", fs.Length + "");

    await fs.CopyToAsync(Response.Body);

    await Response.CompleteAsync();

    return;
    */

}



@{
    var t = this.GetType().BaseType;

    if (AppExtensionHandler.ExtensionCount == 0)
    {
        AppExtensionHandler.LoadAppExtensions(Html);
    }

    AppExtensionHandler.OnRequestStart(RequestState);

    var currentPage = await RequestState.GetCurrentPage();
    var sps = await currentPage.GetSubPages();

    var pathToActiveThemeCoreRenderingFile = AppPath.Join(GeneralSettings.WebThemesPath, ThemeSettings.ActiveName, RenderingSettings.CoreFileName);
    var pathToDefaultThemeCoreRenderingFile = AppPath.Join(GeneralSettings.WebThemesPath, ThemeSettings.DefaultName, RenderingSettings.CoreFileName);

    var renderingResource = Request.Query[QuerySettings.RenderingResourceParameter];
    var pathToRenderingResource = AppPath.Join(GeneralSettings.WebRenderingPath, renderingResource);

    if (AppFile.Exists(pathToActiveThemeCoreRenderingFile))
    {
        await Html.RenderPartialAsync(pathToActiveThemeCoreRenderingFile);
    }
    else if (AppFile.Exists(pathToDefaultThemeCoreRenderingFile))
    {
        await Html.RenderPartialAsync(pathToDefaultThemeCoreRenderingFile);
    }

    if (AppFile.Exists(pathToRenderingResource))
    {
        await Html.RenderPartialAsync(pathToRenderingResource);
    }
}


